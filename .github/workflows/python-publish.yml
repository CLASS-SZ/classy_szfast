name: Upload Python Package to PyPi

on:
  push:
    branches:
      - main
  workflow_dispatch:
  release:
    types: [published]

permissions:  # Ensure the workflow has permission to push changes
  contents: write  # Allow write access for pushing to the repository

jobs:
  bump_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Bump version with post increment
        run: |
          # Extract current version
          current_version=$(grep -Eo 'version="[^"]*' pyproject.toml | cut -d'"' -f2)
          echo "Current version: $current_version"
          
          # Check if it has a post-release (e.g., .post1)
          if [[ "$current_version" == *".post"* ]]; then
            # Increment post-release number
            base_version=$(echo $current_version | sed 's/\.post[0-9]*//')
            post_number=$(echo $current_version | grep -Eo 'post[0-9]+' | grep -Eo '[0-9]+')
            new_post_number=$((post_number + 1))
            new_version="${base_version}.post${new_post_number}"
          else
            # First post release if there's no post number yet
            new_version="${current_version}.post1"
          fi
          
          echo "New version: $new_version"

          # Update version in pyproject.toml using sed
          sed -i "s/version=\"$current_version\"/version=\"$new_version\"/" pyproject.toml
          
          # Export new_version for the next steps
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Commit and push version bump
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add pyproject.toml -f
          git commit -m "Bump version to ${{ env.new_version }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    needs: bump_version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
